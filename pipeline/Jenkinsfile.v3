node {
  
  env.PATH = "/usr/share/maven/bin:${env.PATH}"
    def commit_id
    stage('Preparation') {
    checkout scm
     sh "git rev-parse --short HEAD > .git/commit-id"
     commit_id = readFile('.git/commit-id').trim()
    }
      stage('Code Compile') {
        dir('SpringSecurityRememberMeAnnotationExample') {
          sh 'mvn clean install -DskipTests'
        }
      }
      stage('Execute the unit test') {
         dir('SpringSecurityRememberMeAnnotationExample') {
            sh 'mvn --version'
            //sh 'mvn test -f SpringSecurityRememberMeAnnotationExample/pom.xml'
         }
      }
  stage('Create Docker Image') {
    dir('SpringSecurityRememberMeAnnotationExample') {
    docker.withRegistry('https://index.docker.io/v1/', 'nguyendangkhoa25-doccker-hub') {
        docker.build("nguyendangkhoa25/ci-cd-demo:${commit_id}}")
        }
    }
  }

  stage ('Run Application') {
    try {
      // Start database container here
      // sh 'docker run -d --name db -p 8091-8093:8091-8093 -p 11210:11210 arungupta/oreilly-couchbase:latest'

      // Run application using Docker image
      //sh "DB=`docker inspect --format='{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' db`"
      //sh "docker run -e DB_URI=$DB arungupta/docker-jenkins-pipeline:${env.BUILD_NUMBER}"

      // Run tests using Maven
      //dir ('webapp') {
      //  sh 'mvn exec:java -DskipTests'
      //}
    } catch (error) {
    } finally {
      // Stop and remove database container here
      //sh 'docker-compose stop db'
      //sh 'docker-compose rm db'
    }
  }
}