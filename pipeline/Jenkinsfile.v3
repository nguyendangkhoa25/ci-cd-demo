node {

    try {

        //Current maven directory
        env.PATH = "/usr/share/maven/bin:${env.PATH}"
        def commit_id
        stage('Preparation') {
        checkout scm
         sh "git rev-parse --short HEAD > .git/commit-id"
         commit_id = readFile('.git/commit-id').trim()
        }
        stage('Code Compile') {
            dir('SpringSecurityRememberMeAnnotationExample') {
              sh 'mvn clean install -DskipTests'
            }
        }
        stage('Execute the unit test') {
            dir('SpringSecurityRememberMeAnnotationExample') {
                sh 'mvn test'
            }
        }
        stage('Build Docker Image') {
            dir('SpringSecurityRememberMeAnnotationExample') {
                docker.build("ci-cd-demo:${commit_id}")

                //docker.withRegistry('https://index.docker.io/v1/', 'nguyendangkhoa25-doccker-hub') {
                //    docker.build("nguyendangkhoa25/ci-cd-demo:${commit_id}")
                //}
            }
        }

        //stage ('Run Test Docker Container') {
              // Start database container here

              // Run application using Docker image
              //sh "docker run nguyendangkhoa25/ci-cd-demo:${commit_id}"
              //sh "docker run --name ci-cd-demo:${commit_id} -it -p 8071:8071 -d ci-cd-demo:${commit_id}"

              // Run tests using Maven
              //dir ('SpringSecurityRememberMeAnnotationExample') {
              //  sh 'mvn exec:java -DskipTests'
              //}
        //}

        stage('Publish Docker Image to Regitry') {
            dir('SpringSecurityRememberMeAnnotationExample') {
                docker.withRegistry('https://index.docker.io/v1/', 'nguyendangkhoa25-doccker-hub'){
                    docker.build("nguyendangkhoa25/ci-cd-demo:${commit_id}").push()
                }
            }
         }

        stage('Download Docker Image') {
            dir('SpringSecurityRememberMeAnnotationExample') {
                docker.withRegistry('https://index.docker.io/v1/', 'nguyendangkhoa25-doccker-hub'){
                    docker.build("nguyendangkhoa25/ci-cd-demo:${commit_id}").pull()
                }
            }
         }

        stage('Prepare deploy') {
            dir('SpringSecurityRememberMeAnnotationExample') {
                //stop and remove docker container
                sh 'bash prepare-deploy.sh > /dev/null'
            }
        }

        stage('Start Docker container') {
            dir('SpringSecurityRememberMeAnnotationExample') {
                sh 'docker run --name ci-cd-demo -it -p 8071:8071 -d nguyendangkhoa25/ci-cd-demo:${commit_id}'
            }
         }
    }  
    catch(e) {
      // mark build as failed
      currentBuild.result = "FAILURE";
      // send slack notification
      slackSend (color: '#FF0000', message: "FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
      // throw the error
      throw e;
    }
}